import os
import time
from loguru import logger
import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger.add("bot.log", rotation="1 MB", level="INFO", compression="zip")

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = os.getenv('BOT_TOKEN', '7690904808:AAEyzgbEZ3--sQ1pkJ-bFBpnDSCY2rNq9VY')

class TelegramBot:
    TEXTS = {
        'ru': {
            'welcome': r"""
üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Bloger\.Agensy\!*

üéØ *–ß—Ç–æ —Ç–∞–∫–æ–µ Bloger\.Agensy?*
–≠—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –≥–¥–µ –≤—ã –º–æ–∂–µ—Ç–µ:
‚Ä¢ –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–∞–∫ –±–ª–æ–≥–µ—Ä
‚Ä¢ –ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ—é –∫–æ–º–ø–∞–Ω–∏—é
‚Ä¢ –ù–∞–π—Ç–∏ –∑–∞–∫–∞–∑—ã –∫–∞–∫ —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä

‚ú® *–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:*
‚Ä¢ –£–¥–æ–±–Ω—ã–π –ø–æ–∏—Å–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ –∑–∞–∫–∞–∑–æ–≤
‚Ä¢ –ü—Ä—è–º–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É –±–ª–æ–≥–µ—Ä–∞–º–∏ –∏ –±—Ä–µ–Ω–¥–∞–º–∏
‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Å–¥–µ–ª–∫–∏
‚Ä¢ –ê–∫—Ç—É–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ

üí° *–ö–∞–∫ –Ω–∞—á–∞—Ç—å?*
–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É 'üåê –û—Ç–∫—Ä—ã—Ç—å app' –Ω–∏–∂–µ –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –º–∏—Ä –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π\!

üöÄ –ù–∞–π–¥–∏—Ç–µ –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è\.
            """,
            'subscription': r"""
‚ùóÔ∏è *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Bloger\.Agensy\!*

ü§ñ –ù–∞—à –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:
‚Ä¢ –ù–∞—Ö–æ–¥–∏—Ç—å –∑–∞–∫–∞–∑—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
‚Ä¢ –†–∞–∑–º–µ—â–∞—Ç—å —Å–≤–æ–∏ —É—Å–ª—É–≥–∏
‚Ä¢ –°–≤—è–∑—ã–≤–∞—Ç—å—Å—è —Å —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—è–º–∏
‚Ä¢ –ë—ã—Ç—å –≤ –∫—É—Ä—Å–µ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π

üì¢ *–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:*
[@blogerAgensy](https://t\.me/blogerAgensy)

‚úÖ –ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é\.
            """,
            'help': r"""
üîç *–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:*
‚Ä¢ /start \- –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ 'üåê –û—Ç–∫—Ä—ã—Ç—å app' –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã' –¥–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏

üì± *–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:*
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞—à–∏—Ö —É—Å–ª—É–≥
‚Ä¢ –°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –≤–µ–±\-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
            """,
            'contacts': r"""
üìû *–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:*
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: \+998 97 708 78 67
‚Ä¢ Instagram: [bloger\.agency](https://www\.instagram\.com/bloger\.agency/)
‚Ä¢ –°–∞–π—Ç: [bloger\.agency](https://bloger\.agency)

üë®‚Äçüíª Developer: [@sanjar\_3210](https://t\.me/sanjar\_3210)
            """,
            'choose_language': "üåç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Iltimos, tilni tanlang:",
            'language_changed': "‚úÖ –Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π"
        },
        'uz': {
            'welcome': r"""
üëã *Bloger\.Agensy ilovasiga xush kelibsiz\!*

üéØ *Bloger\.Agensy nima?*
Bu yerda siz:
‚Ä¢ Bloger sifatida e'lon joylashtirishingiz
‚Ä¢ O'z kompaniyangizni taqdim etishingiz
‚Ä¢ Frilanser sifatida buyurtmalar topishingiz
mumkin

‚ú® *Bizning ilovamizning afzalliklari:*
‚Ä¢ Takliflar va buyurtmalarni qulay qidirish
‚Ä¢ Blogerlar va brendlar o'rtasida to'g'ridan\-to'g'ri aloqa
‚Ä¢ Xavfsiz bitimlar
‚Ä¢ Dolzarb takliflar bazasi
‚Ä¢ Professional hamjamiyat

üí° *Qanday boshlash kerak?*
'üåê Ilovani ochish' tugmasini bosing va o'zingiz uchun yangi imkoniyatlar yarating\!

üöÄ Aynan rivojlanishingiz uchun foydali bo'lgan narsalarni toping\.
            """,
            'subscription': r"""
‚ùóÔ∏è *Bloger\.Agensy\-ga xush kelibsiz\!*

ü§ñ Bizning bot sizga yordam beradi:
‚Ä¢ Buyurtmalar va takliflarni topish
‚Ä¢ O'z xizmatlaringizni joylashtirish
‚Ä¢ Reklama beruvchilar bilan bog'lanish
‚Ä¢ Yangi imkoniyatlardan xabardor bo'lish

üì¢ *Ilovadan foydalanish va dolzarb yangiliklarni olish uchun kanalimizga obuna bo'ling:*
[@blogerAgensy](https://t\.me/blogerAgensy)

‚úÖ Obuna bo'lgandan so'ng ilovaga kirish uchun /start tugmasini bosing\.
            """,
            'help': r"""
üîç *Botdan qanday foydalanish:*
‚Ä¢ /start \- botni ishga tushirish
‚Ä¢ Ilovaga kirish uchun 'üåê Ilovani ochish' tugmasini bosing
‚Ä¢ Biz bilan bog'lanish uchun 'üìû Kontaktlar' tugmasini bosing

üì± *Imkoniyatlar:*
‚Ä¢ Xizmatlarimizni ko'rish
‚Ä¢ Menejer bilan bog'lanish
‚Ä¢ Veb\-ilovaga kirish
            """,
            'contacts': r"""
üìû *Bizning kontaktlar:*
‚Ä¢ Telefon: \+998 97 708 78 67
‚Ä¢ Instagram: [bloger\.agency](https://www\.instagram\.com/bloger\.agency/)
‚Ä¢ Sayt: [bloger\.agency](https://bloger\.agency)

üíª Developer: [@sanjar\_3210](https://t\.me/sanjar\_3210)
            """,
            'choose_language': "üåç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Iltimos, tilni tanlang:",
            'language_changed': "‚úÖ Til muvaffaqiyatli o'zbekchaga o'zgartirildi"
        }
    }

    def __init__(self):
        self.bot = telebot.TeleBot(TOKEN)
        self.channel_id = "@blogerAgensy"
        self.user_languages = {}
        self.setup_handlers()
        
    def create_language_keyboard(self):
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        buttons = [
            KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π"),
            KeyboardButton("üá∫üáø O'zbekcha")
        ]
        keyboard.add(*buttons)
        return keyboard

    def create_main_keyboard(self, lang='ru', chat_id=None):
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º chat_id –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –µ—Å–ª–∏ –æ–Ω –ø–µ—Ä–µ–¥–∞–Ω
        web_app_url = f"https://bgweb.nurali.uz/index.php"
        if chat_id:
            web_app_url += f"?chat_id={chat_id}"
        web_app = WebAppInfo(url=web_app_url)
        
        buttons_text = {
            'ru': [
                ("üåê –û—Ç–∫—Ä—ã—Ç—å app", web_app),
                "üë• –ù–∞—à–∞ –≥—Ä—É–ø–ø–∞",
                "üì¢ –ù–∞—à –∫–∞–Ω–∞–ª",
                "‚ùì –ü–æ–º–æ—â—å",
                "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã",
                "üîÑ –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"
            ],
            'uz': [
                ("üåê Ilovani ochish", web_app),
                "üë• Bizning guruh",
                "üì¢ Bizning kanal",
                "‚ùì Yordam",
                "üìû Kontaktlar",
                "üîÑ Tilni o'zgartirish"
            ]
        }
        
        buttons = []
        for text in buttons_text[lang]:
            if isinstance(text, tuple):
                buttons.append(KeyboardButton(text=text[0], web_app=text[1]))
            else:
                buttons.append(KeyboardButton(text=text))

        keyboard.row(buttons[0])
        keyboard.row(buttons[1], buttons[2])
        keyboard.row(buttons[3], buttons[4])
        keyboard.row(buttons[5])
        return keyboard

    def check_subscription(self, message):
        try:
            member = self.bot.get_chat_member(chat_id=self.channel_id, user_id=message.from_user.id)
            return member.status in ['member', 'administrator', 'creator']
        except telebot.apihelper.ApiException as e:
            logger.error(f"API Error in check_subscription: {e}")
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–ø–∏—Å–∫—É —á–∞—Å—Ç–Ω–∏–∫–æ–≤, 
            # –≤—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏
            return True
        except Exception as e:
            logger.error(f"Error checking subscription: {e}")
            return False

    def send_subscription_message(self, message):
        try:
            lang = self.user_languages.get(message.from_user.id, 'ru')
            self.bot.send_message(
                message.chat.id,
                self.TEXTS[lang]['subscription'],
                parse_mode='MarkdownV2',
                disable_web_page_preview=True
            )
        except Exception as e:
            logger.error(f"Error in send_subscription_message: {e}")

    def subscription_required(self, handler):
        def wrapper(message):
            if self.check_subscription(message):
                return handler(message)
            else:
                self.send_subscription_message(message)
        return wrapper

    def send_welcome(self, message):
        try:
            lang = self.user_languages.get(message.from_user.id, 'ru')
            with open('img/logo.png', 'rb') as photo:
                self.bot.send_photo(
                    message.chat.id,
                    photo,
                    caption=self.TEXTS[lang]['welcome'],
                    parse_mode='MarkdownV2',
                    reply_markup=self.create_main_keyboard(lang)
                )
            logger.info(f"Welcome message with logo sent to user {message.from_user.id}")
        except Exception as e:
            logger.error(f"Error in send_welcome: {e}")
            self.send_error_message(message)

    def send_help(self, message):
        try:
            lang = self.user_languages.get(message.from_user.id, 'ru')
            self.bot.send_message(
                message.chat.id,
                self.TEXTS[lang]['help'],
                parse_mode='MarkdownV2'
            )
        except Exception as e:
            logger.error(f"Error in send_help: {e}")
            self.send_error_message(message)

    def send_contacts(self, message):
        try:
            lang = self.user_languages.get(message.from_user.id, 'ru')
            self.bot.send_message(
                message.chat.id,
                self.TEXTS[lang]['contacts'],
                parse_mode='MarkdownV2',
                disable_web_page_preview=True
            )
        except Exception as e:
            logger.error(f"Error in send_contacts: {e}")
            self.send_error_message(message)

    def send_error_message(self, message):
        try:
            lang = self.user_languages.get(message.from_user.id, 'ru')
            error_text = {
                'ru': "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.",
                'uz': "Kechirasiz, xatolik yuz berdi. Keyinroq urinib ko'ring yoki yordam xizmatiga murojaat qiling."
            }
            self.bot.send_message(message.chat.id, error_text[lang])
        except Exception as e:
            logger.error(f"Error in send_error_message: {e}")

    def setup_handlers(self):
        @self.bot.message_handler(commands=['start'])
        def start(message):
            # –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
            if message.from_user.id not in self.user_languages:
                self.bot.send_message(
                    message.chat.id,
                    self.TEXTS['ru']['choose_language'],
                    reply_markup=self.create_language_keyboard()
                )
            else:
                if self.check_subscription(message):
                    self.send_welcome(message)
                else:
                    self.send_subscription_message(message)

        @self.bot.message_handler(func=lambda message: message.text in ["üá∑üá∫ –†—É—Å—Å–∫–∏–π", "üá∫üáø O'zbekcha"])
        def language_choice(message):
            user_id = message.from_user.id
            if message.text == "üá∑üá∫ –†—É—Å—Å–∫–∏–π":
                self.user_languages[user_id] = 'ru'
                self.bot.send_message(
                    message.chat.id,
                    self.TEXTS['ru']['language_changed'],
                    reply_markup=self.create_main_keyboard('ru', message.chat.id)
                )
            else:
                self.user_languages[user_id] = 'uz'
                self.bot.send_message(
                    message.chat.id,
                    self.TEXTS['uz']['language_changed'],
                    reply_markup=self.create_main_keyboard('uz', message.chat.id)
                )
            
            if self.check_subscription(message):
                self.send_welcome(message)
            else:
                self.send_subscription_message(message)

        @self.bot.message_handler(func=lambda message: message.text in ["üîÑ –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫", "üîÑ Tilni o'zgartirish"])
        def change_language(message):
            self.bot.send_message(
                message.chat.id,
                self.TEXTS['ru']['choose_language'],
                reply_markup=self.create_language_keyboard()
            )

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å —É—á–µ—Ç–æ–º —è–∑—ã–∫–∞
        @self.bot.message_handler(commands=['help'])
        def help(message):
            if self.check_subscription(message):
                self.send_help(message)
            else:
                self.send_subscription_message(message)

        @self.bot.message_handler(func=lambda message: message.text in ["‚ùì –ü–æ–º–æ—â—å", "‚ùì Yordam"])
        def help_button(message):
            if self.check_subscription(message):
                self.send_help(message)
            else:
                self.send_subscription_message(message)

        @self.bot.message_handler(func=lambda message: message.text in ["üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", "üìû Kontaktlar"])
        def contacts_button(message):
            if self.check_subscription(message):
                self.send_contacts(message)
            else:
                self.send_subscription_message(message)

        @self.bot.message_handler(func=lambda message: message.text in ["üë• –ù–∞—à–∞ –≥—Ä—É–ø–ø–∞", "üë• Bizning guruh"])
        def group_button(message):
            if self.check_subscription(message):
                lang = self.user_languages.get(message.from_user.id, 'ru')
                try:
                    group_text = {
                        'ru': "üí¨ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π –≥—Ä—É–ø–ø–µ –¥–ª—è –æ–±—â–µ–Ω–∏—è: [Bloger\\.Agensy Group](https://t.me/blogerAgencygroup)",
                        'uz': "üí¨ Muloqot uchun guruhimizga qo'shiling: [Bloger\\.Agensy Group](https://t.me/blogerAgencygroup)"
                    }
                    self.bot.send_message(
                        message.chat.id,
                        group_text[lang],
                        parse_mode='MarkdownV2',
                        disable_web_page_preview=True
                    )
                except Exception as e:
                    logger.error(f"Error in group_button: {e}")
                    self.send_error_message(message)
            else:
                self.send_subscription_message(message)

        @self.bot.message_handler(func=lambda message: message.text in ["üì¢ –ù–∞—à –∫–∞–Ω–∞–ª", "üì¢ Bizning kanal"])
        def channel_button(message):
            lang = self.user_languages.get(message.from_user.id, 'ru')
            try:
                channel_text = {
                    'ru': "üì£ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏: [Bloger\\.Agensy](https://t.me/blogerAgensy)",
                    'uz': "üì£ Yangiliklardan xabardor bo'lish uchun kanalimizga obuna bo'ling: [Bloger\\.Agensy](https://t.me/blogerAgensy)"
                }
                self.bot.send_message(
                    message.chat.id,
                    channel_text[lang],
                    parse_mode='MarkdownV2',
                    disable_web_page_preview=True
                )
            except Exception as e:
                logger.error(f"Error in channel_button: {e}")
                self.send_error_message(message)

    def run(self):
        try:
            logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
            self.bot.infinity_polling(timeout=10, long_polling_timeout=5)
        except KeyboardInterrupt:
            logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            self.bot.stop_polling()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –±–æ—Ç–∞: {e}")
            time.sleep(5)

if __name__ == "__main__":
    bot = TelegramBot()
    bot.run() 